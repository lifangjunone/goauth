// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"goauth/app/goauth/v1/internal/biz"
	"goauth/app/goauth/v1/internal/conf"
	"goauth/app/goauth/v1/internal/server"
	"goauth/app/goauth/v1/internal/service"
	"goauth/app/goauth/v1/middleware/registry"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confServer *conf.Server, data *conf.Data, confRegistry *conf.Registry, logger log.Logger) (*kratos.App, func(), error) {
	registrar := registry.NewConsulRegistry(confRegistry)
	discovery := registry.NewConsulDiscover(confRegistry)
	userClient := biz.NewUserClient(discovery)
	authUseCase := biz.NewAuthUseCase(userClient, logger)
	goAuthService := service.NewGoAuthService(authUseCase, logger)
	httpServer := server.NewHTTPServer(confServer, goAuthService, logger)
	app := newApp(logger, registrar, httpServer, confServer)
	return app, func() {
	}, nil
}
